@{
    ViewBag.Title = "Organizations";
}
@model Reestr.BLL.DTOs.OrganizationDTO
@using Kendo.Mvc.UI


<div id="example">
    <div class="demo-section k-content">

        <h4>Date Picker:</h4>
        <input id="datepicker" value="10/10/2020" title="datepicker" />

        <h4>Combo Box:</h4>
        <input id="fabric" placeholder="Select fabric..." />
    </div>
    <script>
        $(document).ready(function () {
            $("#datepicker").kendoDatePicker();

            $("#fabric").kendoComboBox({
                dataTextField: "text",
                dataValueField: "value",
                dataSource: [
                    { text: "Cotton", value: "1" },
                    { text: "Polyester", value: "2" },
                    { text: "Cotton/Polyester", value: "3" },
                    { text: "Rib Knit", value: "4" },
                ],
                filter: "contains",
                suggest: true,
                index: 3
            });
        })
    </script>
</div>





@* Разметка ниже использовалась для тестирования backend'а *@
@*<div>
    <button>
        @Html.ActionLink("Insert Organization", "Insert", "Home");
    </button>
    <button>
        @Html.ActionLink("Update Organization", "Update", "Home");
    </button>
    <button>
        @Html.ActionLink("List Organizations", "List", "Home");
    </button>
    <button>
        @Html.ActionLink("Delete Organizations", "Delete", "Home");
    </button>

</div>*@

@*<div class="container" style="margin-top: 100px">
    @(Html.Kendo().Grid<Reestr.BLL.DTOs.OrganizationDTO>()
        .Name("OrganizationGrid")
        .Columns(columns =>
        {
            columns.Bound(o => o.Name).Width(200);
            columns.Bound(o => o.BIN).Width(200);
            columns.Bound(o => o.PhoneNumber).Width(200);
            columns.Bound(o => o.BeginDate).Format("{0:dd.MM.yyyy}").Width(200);
            columns.Command(command => { command.Edit(); command.Destroy(); });
        })
        .ToolBar(toolBar => toolBar.Create())
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        .Pageable()
        .Scrollable()
        .Sortable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(o => o.Id))
            .Read(read => read.Action("List", "Home"))
            .Create(create => create.Action("Insert", "Home"))
            .Update(update => update.Action("Update", "Home"))
            .Destroy(destroy => destroy.Action("Delete", "Home"))
        )
    )
</div>*@