
@model Reestr.BLL.DTOs.ServiceReestrDTO

<form id="addForm">
    <input id="organizationComboBox" placeholder="Выберите организацию" />
</form>

<script type="text/javascript">

    $(document).ready(function () {
        @*$('#organizationComboBox').kendoComboBox({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            serverFiltering: true,
            minLength: 3,
            dataSource: {
                type: "odata",
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Organization/List",
                        data: function (data) {
                            return {
                                data
                            }
                        },
                        type: "GET",
                        dataType: "json"
                    },
                    parameterMap: function (data, type) {
                        if (type == "read") {
                            return {
                                NameToSearchFor: $('#organizationComboBox').val(),
                            }
                        }
                    },
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    model: {
                        id: "Id",
                        fields: {
                            Id: { type: "number", editable: false, nullable: true },
                            Name: { type: "string", validation: { required: true } },
                            BIN: { type: "string", validation: { required: true } },
                            PhoneNumber: { type: "string", validation: { required: true } },
                            BeginDate: { type: "date", validation: { required: true } }
                        }
                    }
                }
            }
        });*@

        var model = @Html.Raw(Json.Encode(Model));

        $('#addForm').kendoForm({
            orientation: "vertical",
            buttonsTemplate: '<button class="k-button k-primary k-form-submit" type="submit">Подтвердить</button><button class="k-button k-form-clear">Очистить</button>',
            items: [{
                type: "group",
                items: [
                    {
                        field: "Organization",
                        editor: "ComboBox",
                        label: "Организация:",
                        editorOptions: {
                            placeholder: "Выберите организацию",
                            dataTextField: "Name",
                            dataValueField: "Id",
                            filter: "contains",
                            serverFiltering: true,
                            minLength: 3,
                            dataSource: {
                                type: "odata",
                                serverFiltering: true,
                                transport: {
                                    read: {
                                        url: "/Organization/List",
                                        data: function (data) {
                                            return {
                                                data
                                            }
                                        },
                                        type: "GET",
                                        dataType: "json"
                                    },                                    
                                    parameterMap: function (data, type) {
                                        if (type == "read") {
                                            return {
                                                NameToSearchFor: $('[name$="Organization_input"]').val(),
                                            }
                                        }
                                    },
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            Id: { type: "number", editable: false, nullable: true },
                                            Name: { type: "string", validation: { required: true } },
                                            BIN: { type: "string", validation: { required: true } },
                                            PhoneNumber: { type: "string", validation: { required: true } },
                                            BeginDate: { type: "date", validation: { required: true } }
                                        }
                                    }
                                }
                            },
                            dataBound: function (data) {
                                console.log(data);

                            },
                        }
                    },
                    {
                        field: "Service",
                        editor: "ComboBox",
                        label: "Услуга:",
                        editorOptions: {
                            placeholder: "Выберите услугу",
                            dataTextField: "Name",
                            dataValueField: "Id",
                            serverFiltering: true,
                            filter: "contains",
                            minLength: 3,
                            dataSource: {
                                type: "odata",
                                serverFiltering: true,
                                transport: {
                                    read: {
                                        url: "/Service/List",
                                        data: function (data) {
                                            return {
                                                data
                                            }
                                        },
                                        type: "GET",
                                        dataType: "json"
                                    },
                                    parameterMap: function (data, type) {
                                        if (type == "read") {
                                            return {
                                                NameToSearchFor: $('[name$="Service_input"]').val(),
                                            }
                                        }
                                    },
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            Id: { type: "number", editable: false, nullable: true },
                                            Name: { type: "string", validation: { required: true } },
                                            Code: { type: "string", validation: { required: true } },
                                            Price: { type: "number", validation: { required: true } },
                                            BeginDate: { type: "date", validation: { required: true } }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        field: "Price",
                        label: "Стоимость:"
                    },
                    {
                        field: "BeginDate",
                        editor: "DatePicker",
                        label: "Дата начала действия:",
                        editorOptions: {
                            format: "dd/MM/yyyy hh:mm:ss"
                        }
                    },
                ]
            }],
            submit: function (e) {
                e.preventDefault();

                var model = @Html.Raw(Json.Encode(Model));
                console.log(model);

                if (model == null) {
                    var data = {
                        OrganizationId: e.model.Organization.Id,
                        ServiceId: e.model.Service.Id,
                        Price: e.model.Price,
                        BeginDate: $('#BeginDate').val()
                    }

                    $.ajax({
                        url: "/ServiceReestr/Insert",
                        data: data,
                        type: "POST",
                        dataType: "json",
                        success: function () {
                            $('#grid').data('kendoGrid').dataSource.read().promise().done(function () {
                                $('.k-form-submit').closest('.k-window-content').data('kendoWindow').close();
                            })
                        }
                    });

                }
                else {
                    var data = {
                        Id: model.Id,
                        OrganizationId: e.model.Organization.Id,
                        ServiceId: e.model.Service.Id,
                        Price: e.model.Price,
                        BeginDate: $('#BeginDate').val()
                    }

                    $.ajax({
                        url: "/ServiceReestr/Update",
                        data: data,
                        type: "POST",
                        dataType: "json",
                        success: function () {
                            $('#grid').data('kendoGrid').dataSource.read().promise().done(function () {
                                $('.k-form-submit').closest('.k-window-content').data('kendoWindow').close();
                            })
                        }
                    });
                }


                e.preventDefault();
            },
        });


    });

</script>